plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.skytracker'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':apps:common')
	implementation project(':apps:core')
	implementation project(':apps:kafka-producer')
	implementation project(':apps:elasticsearch')
	implementation project(':apps:price-alert')


	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.redisson:redisson-spring-boot-starter:3.16.3'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('copyConfigs', Copy) {
	// Kafka 설정 복사
	from(project(":apps:kafka-producer").layout.projectDirectory.dir("src/main/resources")) {
		include("application.yml")
		rename("application.yml", "kafka-application.yml")
	}
	// Elasticsearch 설정 복사
	from(project(":apps:elasticsearch").layout.projectDirectory.dir("src/main/resources")) {
		include("application.yml")
		rename("application.yml", "elasticsearch-application.yml")
	}
	into layout.projectDirectory.dir("src/main/resources")
}

tasks.named('processResources') {
	dependsOn tasks.named('copyConfigs')
}

clean {
	delete file('src/main/generated')
}

springBoot {
	mainClass = 'com.skytracker.SkyTrackerApplication'
}